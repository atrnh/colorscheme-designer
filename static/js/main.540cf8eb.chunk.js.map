{"version":3,"sources":["components/PreviewText.js","components/ColorButton.js","components/ColorBox.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["PreviewText","_ref","styles","text","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","css","sectionStyle","prev","map","style","i","key","StyleSheet","create","margin","ColorButton","label","color","btn","onClick","navigator","clipboard","writeText","hex","type","colorCode","background","hsl","l","borderStyle","borderWidth","display","fontSize","flexDirection","justifyContent","alignItems","borderColor","border","padding","width","textAlign","ColorBox","previewText","bg","fg","changeFg","changeBg","colorBox","buttonPanel","italic","bold","normal","maxHeight","minWidth","fontStyle","fontWeight","Sidebar","prevText","onPrevTextChange","onColorChange","onAddBox","sidebar","section","inputGroup","customInput","inputText","htmlFor","id","value","onChange","lib","paddingBottom","layout","grid","gridTemplateColumns","minHeight","container","height","colorBoxes","flexWrap","ctlText","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayText","colors","h","s","active","prop","addBox","bind","assertThisInitialized","changeText","activateColor","setState","latest","objectSpread","length","concat","toConsumableArray","e","target","console","log","prevState","c","defineProperty","_this2","_this$state","bodyFont","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.540cf8eb.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\n\nexport default ({ styles, text, ...props }) => (\n  <section\n    className={css(sectionStyle.prev)}\n    {...props}\n  >\n    {styles.map((style, i) => (\n      <p\n        key={i}\n        className={css(style)}\n      >\n        {text}\n      </p>\n    ))}\n  </section>\n);\n\nconst sectionStyle = StyleSheet.create({\n  prev: {\n    margin: '0 1.25em',\n  }\n})\n","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\n\nexport default ({\n  label,\n  color,\n  ...props\n}) => {\n  return (\n    <button\n      className={css( styles.btn )}\n      {...props}\n    >\n      <div>\n        {label}\n      </div>\n\n      <div\n        onClick={() => navigator.clipboard.writeText(color.hex)}\n        type=\"text\"\n        className={css(styles.colorCode)}\n        style={{\n          background: color.hex,\n          color: color.hsl.l > 0.50 ? 'black' : 'white'\n        }}\n      >\n        {color.hex}\n      </div>\n    </button>\n  );\n}\n\nconst styles = StyleSheet.create({\n  btn: {\n    borderStyle: 'solid',\n    borderWidth: '1px 1px 5px 5px',\n    display: 'flex',\n    fontSize: '0.7rem',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '2px 0',\n    background: '#eee',\n    borderColor: 'white'\n  },\n\n  colorCode: {\n    border: '1px solid #ccc',\n    padding: '2px',\n    width: '8em',\n    fontSize: '10px',\n    textAlign: 'center'\n  },\n})\n","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport PreviewText from './PreviewText';\nimport ColorButton from './ColorButton';\n\nexport default ({\n  previewText,\n  bg,\n  fg,\n  changeFg,\n  changeBg,\n  ...props\n}) => {\n  return (\n    <div\n      style={{\n        background: bg.hex,\n        color: fg.hex\n      }}\n      className={css(styles.colorBox)}\n      {...props}\n    >\n      <section className={css(styles.buttonPanel)}>\n        <ColorButton\n          label=\"fg\"\n          color={fg}\n          onClick={changeFg}\n        />\n        <ColorButton\n          label=\"bg\"\n          color={bg}\n          onClick={changeBg}\n        />\n      </section>\n\n      <PreviewText\n        styles={[\n          styles.italic,\n          styles.bold,\n          styles.normal\n        ]}\n        text={previewText}\n      />\n    </div>\n  );\n}\n\nconst styles = StyleSheet.create({\n  colorBox: {\n    display: 'flex',\n    margin: '0.5rem 0',\n    padding: '10px',\n    maxHeight: '8em',\n    minWidth: '10em'\n  },\n\n  buttonPanel: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  previewText: {\n    fontSize: '1.13em',\n    margin: '0 20px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n  },\n\n  italic: {\n    fontStyle: 'italic'\n  },\n\n  bold: {\n    fontWeight: 'bold'\n  },\n\n  normal: {\n    fontWeight: 'normal'\n  },\n});\n","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport { SketchPicker } from 'react-color';\n\nexport default ({\n  prevText,\n  onPrevTextChange,\n  color,\n  onColorChange,\n  onAddBox,\n  ...props\n}) => (\n  <aside\n    className={css([ styles.sidebar ])}\n    {...props}\n  >\n    <section className={css(styles.section)}>\n      <fieldset className={css(styles.inputGroup)}>\n        <button\n          className={css([ styles.customInput, styles.inputText ])}\n          onClick={onAddBox}\n        >\n          {`✨`} add color\n        </button>\n      </fieldset>\n\n      <fieldset className={css(styles.inputGroup)}>\n        <label className={css(styles.inputText)} htmlFor=\"dText\">\n          Edit preview text\n        </label>\n        <input\n          id=\"dText\"\n          className={css(styles.customInput)}\n          type=\"text\"\n          value={prevText}\n          onChange={onPrevTextChange}\n        />\n      </fieldset>\n\n      <fieldset className={css(styles.inputGroup)}>\n        <SketchPicker\n          color={color}\n          onChange={onColorChange}\n        />\n      </fieldset>\n    </section>\n  </aside>\n);\n\nconst styles = StyleSheet.create({\n  sidebar: {\n    margin: '1rem',\n    display: 'flex',\n    fontSize: '0.9rem',\n    paddingBottom: '5px',\n    alignItems: 'baseline',\n    flexDirection: 'column'\n  },\n\n  section: {\n    margin: '0 10px',\n    minWidth: '100%'\n  },\n\n  inputGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '20px 0'\n  },\n\n  customInput: {\n    borderWidth: '2px 2px 5px 5px',\n    borderColor: 'black',\n    borderStyle: 'solid',\n    background: 'transparent',\n    padding: '5px'\n  },\n\n  inputText: {\n    color: '#ff00a2'\n  }\n});\n","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport ColorBox from './components/ColorBox';\nimport Sidebar from './components/Sidebar';\n\nconst layout = StyleSheet.create({\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: '30% 1fr',\n    minHeight: '100%'\n  },\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%'\n  },\n\n  colorBoxes: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n\n  ctlText: {\n    padding: '5px',\n  },\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayText: 'hi',\n      colors: [\n        {\n          fg: {\n            hex: 'white',\n            hsl: {\n              h: 0,\n              s: 0,\n              l: 1.0\n            }\n          },\n          bg: {\n            hex: 'black',\n            hsl: {\n              h: 0,\n              s: 0,\n              l: 0\n            }\n          }\n        }\n      ],\n      active: {\n        key: 0,\n        prop: 'fg'\n      }\n    };\n\n    this.addBox = this.addBox.bind(this);\n    this.changeText = this.changeText.bind(this);\n    this.activateColor = this.activateColor.bind(this);\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n\n  addBox() {\n    this.setState(({ colors }) => {\n      const latest = { ...colors[colors.length - 1] };\n      return { colors: [...colors, latest ] };\n    });\n  }\n\n  changeText(e) {\n    this.setState({ displayText: e.target.value });\n  }\n\n  activateColor(key, prop) {\n    console.log(key, prop);\n    this.setState({ active: { key, prop } });\n  }\n\n  onColorChange(color, e) {\n    this.setState((prevState) => ({\n      colors: prevState.colors.map((c, i) => (\n        i === prevState.active.key\n          ? { ...c, [prevState.active.prop]: color }\n          : { ...c }\n      ))\n    }));\n  }\n\n  render() {\n    const { displayText, colors, active } = this.state;\n\n    return (\n      <div className={css([ layout.grid, styles.bodyFont ])}>\n        <Sidebar\n          prevText={displayText}\n          color={colors[active.key][active.prop]}\n          onPrevTextChange={this.changeText}\n          onAddBox={this.addBox}\n          onColorChange={this.onColorChange}\n        />\n        <section className={css(layout.section)}>\n          <div className={css(styles.colorBoxes)}>\n            {this.state.colors.map((color, i) => (\n              <ColorBox\n                key={i}\n                bg={color.bg}\n                fg={color.fg}\n                previewText={this.state.displayText}\n                changeFg={() => this.activateColor(i, 'fg')}\n                changeBg={() => this.activateColor(i, 'bg')}\n              />\n            ))}\n          </div>\n\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}